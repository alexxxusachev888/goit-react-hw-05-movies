{"version":3,"file":"static/js/415.c44c5806.chunk.js","mappings":"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","sources":["api/tmbApiService.js","components/MovieList/MovieList.styled.jsx","utils/genresTransform.jsx","components/MovieList/MovieList.jsx","pages/Home.jsx","../node_modules/date-fns/esm/_lib/requiredArgs/index.js","../node_modules/date-fns/esm/toDate/index.js","../node_modules/date-fns/esm/getYear/index.js","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"],"sourcesContent":["\nconst KEY_API = '0b11624b950ea9c4284f61844023b09c';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\n\nexport const fetchTrends = async () => {\n  try {\n    const response = await fetch(`${BASE_URL}trending/all/day?api_key=${KEY_API}`);\n    const data = await response.json();\n    console.log(data.results);\n    return data.results;\n    \n\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport const fetchMovies = async (movieSearch) => {\n\n  try {\n    const response = await fetch(`${BASE_URL}search/movie?api_key=${KEY_API}&query=${movieSearch}&language=en-US&page=1&include_adult=false`)\n    const data = await response.json();\n    return data.results;\n\n  } catch (error) {\n    console.log(error);\n  }\n}\n\n  export const fetchMovieById = async (movie) => {\n\n    try {\n      const response = await fetch(`${BASE_URL}movie/${movie}?api_key=${KEY_API}&language=en-US`)\n      const data = await response.json();\n      return data;\n  \n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  export const fetchMovieReviews = async (movie) => {\n\n    try {\n      const response = await fetch(`${BASE_URL}movie/${movie}/reviews?api_key=${KEY_API}&language=en-US&page=1`)\n      const data = await response.json();\n      return data.results;\n  \n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  export const fetchMovieCast = async (movie) => {\n\n    try {\n      const response = await fetch(`${BASE_URL}movie/${movie}/credits?api_key=${KEY_API}&language=en-US&page=1`)\n      const data = await response.json();\n      return data.cast;\n  \n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  export const fetchGenres = async () => {\n\n    try {\n      const response = await fetch(`${BASE_URL}genre/movie/list?api_key=${KEY_API}&language=en-US`)\n      const data = await response.json();\n\n      const genresList = data.genres.reduce((acc, { id, name }) => {\n        acc[id] = name;\n        return acc;\n        }, {});\n\n        localStorage.setItem('genresList', JSON.stringify(genresList));\n  \n    } catch (error) {\n      console.log(error);\n    }\n  }\n","import styled from \"styled-components\";\n\nexport const MoviesWrapper = styled.ul`\n    margin-top: 40px;\n    margin-bottom 40px;\n    display: grid;\n    grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));\n    grid-auto-rows: minmax(300px, auto);\n    gap: 25px;\n`\nexport const MovieCard = styled.li`\n    position: relative;\n    border: 2px solid ${(prop)=> prop.theme.accent};\n    border-radius: 10px;\n    overflow: hidden;\n    transition: transform 250ms ease-in-out;\n\n    &:hover,\n    &:focus {\n        transform: scale(1.03);\n        box-shadow: -1px 8px 66px 6px rgba(115,149,174,0.76);\n    }\n`\nexport const DescrWrapper = styled.div`\n    padding: 10px;\n`\nexport const Title = styled.h2`\n    font-size: 22px;\n`\nexport const Img = styled.img`\n    object-fit: cover;\n    object-position: left top;\n    width: 100%;\n    height: 400px;\n`\nexport const VoteAverege = styled.p`\n    position: absolute; \n    top:20px;\n    left: 20px;\n    padding: 10px 7px;\n    border-radius: 5px;\n    font-weight: bold;\n    background-color: ${(prop)=> prop.theme.accent}\n`\nexport const InnerWrapper = styled.div`\n    display: flex;\n    margin-top: 8px;\n    gap: 3px;\n`\nexport const Genres = styled.p`\n\n`\nexport const ReleaseDate = styled.p`\n\n`\n","const genresConvertor = (genre_ids) => {\n    const parcedGenres = JSON.parse(localStorage.getItem('genresList'));\n    const result = genre_ids.map(id => parcedGenres[id]).filter(item => item !== undefined);\n\n    if (result.length > 2) {\n      result.splice(3, result.length - 2).push(\"Others\");\n\n    } else if (result.length === 0) {\n      result.push(\"no genres\")\n    }\n\n    return result\n  }\n\nexport default genresConvertor;","import { NavLink } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { getYear } from 'date-fns'\nimport { MoviesWrapper, MovieCard, DescrWrapper, InnerWrapper, Title, Img, VoteAverege, Genres, ReleaseDate} from './MovieList.styled';\nimport genresConvertor from '../../utils/genresTransform';\n\nconst MovieList = ({movieArr, location})=> {\n    const BASE_URL_IMG = 'https://image.tmdb.org/t/p/w500';\n\n    return(\n        <MoviesWrapper>\n            {movieArr.map(({id, original_title, original_name, vote_average, poster_path, genre_ids, release_date, first_air_date})=> {\n                return (\n                    <MovieCard key={id}>\n                        <NavLink to={`/movies/${id}`} state={{from: location}} >\n                            <Img src={`${BASE_URL_IMG}${poster_path}`} alt={original_title}/>\n                            <DescrWrapper>\n                                <Title>{original_title || original_name}</Title>\n                                <VoteAverege>{vote_average.toFixed(1)}</VoteAverege>\n                                <InnerWrapper>\n                                    <Genres>{genresConvertor(genre_ids).join(', ')}</Genres>\n                                    <ReleaseDate>| {getYear(new Date(release_date || first_air_date))}</ReleaseDate>\n                                </InnerWrapper>\n                            </DescrWrapper>\n                        </NavLink>\n                    </MovieCard>\n                )\n            })}\n        </MoviesWrapper>)\n}\n\nexport default MovieList;\n\nMovieList.propTypes = {\n    movieArr: PropTypes.array.isRequired,\n    location: PropTypes.object.isRequired,\n}","import { useState, useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { fetchTrends, fetchGenres } from '../api/tmbApiService';\nimport MovieList from '../components/MovieList/MovieList';\n\nconst Home = ()=> {\nconst [movies, setTrendingMovies] = useState([]);\nconst location = useLocation();\n\n    useEffect(()=>{\n        const trendingMoviesArr = async () => {\n            try {\n              const movieArr = await fetchTrends();\n              setTrendingMovies(movieArr);\n              fetchGenres();\n\n            } catch (error) {\n              console.log(error);\n            }\n        }\n\n        trendingMoviesArr();\n    },[])\n\n    return (\n        <>\n        <MovieList movieArr={movies} location={location}/>\n        </>\n    )\n}\n\nexport default Home;\n","export default function requiredArgs(required, args) {\n  if (args.length < required) {\n    throw new TypeError(required + ' argument' + (required > 1 ? 's' : '') + ' required, but only ' + args.length + ' present');\n  }\n}","function _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name toDate\n * @category Common Helpers\n * @summary Convert the given argument to an instance of Date.\n *\n * @description\n * Convert the given argument to an instance of Date.\n *\n * If the argument is an instance of Date, the function returns its clone.\n *\n * If the argument is a number, it is treated as a timestamp.\n *\n * If the argument is none of the above, the function returns Invalid Date.\n *\n * **Note**: *all* Date arguments passed to any *date-fns* function is processed by `toDate`.\n *\n * @param {Date|Number} argument - the value to convert\n * @returns {Date} the parsed date in the local time zone\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Clone the date:\n * const result = toDate(new Date(2014, 1, 11, 11, 30, 30))\n * //=> Tue Feb 11 2014 11:30:30\n *\n * @example\n * // Convert the timestamp to date:\n * const result = toDate(1392098430000)\n * //=> Tue Feb 11 2014 11:30:30\n */\n\nexport default function toDate(argument) {\n  requiredArgs(1, arguments);\n  var argStr = Object.prototype.toString.call(argument); // Clone the date\n\n  if (argument instanceof Date || _typeof(argument) === 'object' && argStr === '[object Date]') {\n    // Prevent the date to lose the milliseconds when passed to new Date() in IE10\n    return new Date(argument.getTime());\n  } else if (typeof argument === 'number' || argStr === '[object Number]') {\n    return new Date(argument);\n  } else {\n    if ((typeof argument === 'string' || argStr === '[object String]') && typeof console !== 'undefined') {\n      // eslint-disable-next-line no-console\n      console.warn(\"Starting with v2.0.0-beta.1 date-fns doesn't accept strings as date arguments. Please use `parseISO` to parse strings. See: https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#string-arguments\"); // eslint-disable-next-line no-console\n\n      console.warn(new Error().stack);\n    }\n\n    return new Date(NaN);\n  }\n}","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name getYear\n * @category Year Helpers\n * @summary Get the year of the given date.\n *\n * @description\n * Get the year of the given date.\n *\n * @param {Date|Number} date - the given date\n * @returns {Number} the year\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Which year is 2 July 2014?\n * const result = getYear(new Date(2014, 6, 2))\n * //=> 2014\n */\n\nexport default function getYear(dirtyDate) {\n  requiredArgs(1, arguments);\n  return toDate(dirtyDate).getFullYear();\n}","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}"],"names":["KEY_API","BASE_URL","fetchTrends","fetch","response","json","data","console","log","results","fetchMovies","movieSearch","fetchMovieById","movie","fetchMovieReviews","fetchMovieCast","cast","fetchGenres","genresList","genres","reduce","acc","id","name","localStorage","setItem","JSON","stringify","MoviesWrapper","styled","MovieCard","prop","theme","accent","DescrWrapper","Title","Img","VoteAverege","InnerWrapper","Genres","ReleaseDate","genre_ids","parcedGenres","parse","getItem","result","map","filter","item","undefined","length","splice","push","movieArr","location","original_title","original_name","vote_average","poster_path","release_date","first_air_date","to","state","from","src","alt","toFixed","genresConvertor","join","getYear","Date","useState","movies","setTrendingMovies","useLocation","useEffect","trendingMoviesArr","requiredArgs","required","args","TypeError","_typeof","obj","Symbol","iterator","constructor","prototype","toDate","argument","arguments","argStr","Object","toString","call","getTime","warn","Error","stack","NaN","dirtyDate","getFullYear","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","then","_asyncToGenerator","fn","self","this","apply","err"],"sourceRoot":""}