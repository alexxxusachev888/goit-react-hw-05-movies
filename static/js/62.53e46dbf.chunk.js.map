{"version":3,"file":"static/js/62.53e46dbf.chunk.js","mappings":"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","sources":["api/tmbApiService.js","components/PlugComponents/Plug.jsx","components/Reviews/Reviews.styled.jsx","utils/makeItShort.jsx","components/Reviews/Reviews.jsx"],"sourcesContent":["import { toast } from 'react-toastify';\nconst KEY_API = '0b11624b950ea9c4284f61844023b09c';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\n\nexport const fetchTrends = async (pageNum = 1) => {\n  try {\n    const response = await fetch(`${BASE_URL}trending/all/day?api_key=${KEY_API}&page=${pageNum}`);\n    const data = await response.json();\n    return data;\n\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport const fetchMovies = async (movieSearch = '', pageNum = 1, isInitialRender = false) => {\n\n  try {\n    const response = await fetch(`${BASE_URL}search/movie?api_key=${KEY_API}&query=${movieSearch}&language=en-US&page=${pageNum}&include_adult=false`)\n    const data = await response.json();\n    \n    if (!isInitialRender && data.results.length === 0) {\n      toast.warn('Nothing was found on your request');\n    }\n    \n    return data;\n\n  } catch (error) {\n    console.log(error);\n  }\n}\n\n  export const fetchMovieById = async (movie) => {\n\n    try {\n      const response = await fetch(`${BASE_URL}movie/${movie}?api_key=${KEY_API}&language=en-US`)\n      const data = await response.json();\n      return data;\n  \n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  export const fetchMovieReviews = async (movie) => {\n\n    try {\n      const response = await fetch(`${BASE_URL}movie/${movie}/reviews?api_key=${KEY_API}&language=en-US&page=1`)\n      const data = await response.json();\n      return data.results;\n  \n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  export const fetchMovieCast = async (movie) => {\n\n    try {\n      const response = await fetch(`${BASE_URL}movie/${movie}/credits?api_key=${KEY_API}&language=en-US&page=1`)\n      const data = await response.json();\n      return data.cast;\n  \n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  export const fetchGenres = async () => {\n\n    try {\n      const response = await fetch(`${BASE_URL}genre/movie/list?api_key=${KEY_API}&language=en-US`)\n      const data = await response.json();\n\n      const genresList = data.genres.reduce((acc, { id, name }) => {\n        acc[id] = name;\n        return acc;\n        }, {});\n\n        localStorage.setItem('genresList', JSON.stringify(genresList));\n  \n    } catch (error) {\n      console.log(error);\n    }\n  }\n","\nexport const ReviewsPlug = () => {\n    const imgUrl = 'https://media0.giphy.com/media/QPQ3xlJhqR1BXl89RG/200.webp?cid=ecf05e47oeisg3o2v6zfwr5kukig5sa97vyumtbagi4uuum0&rid=200.webp&ct=g';\n    \n    return (\n        <div style={{display: 'flex'}}>\n            <img src={imgUrl} alt='waiting for reviews'/>\n            <img src={imgUrl} alt='waiting for reviews'/>\n            <img src={imgUrl} alt='waiting for reviews'/>\n            <img src={imgUrl} alt='waiting for reviews'/>\n            <img src={imgUrl} alt='waiting for reviews'/>\n        </div>\n    )\n}\n\nexport const MovieSearchPlug = ()=> {\n    return (\n        <img style={{height: '550px'}}src='https://i.pinimg.com/originals/44/5f/1a/445f1ab89041d998d9fa937ad7f9efa3.gif' alt='waiting cat'/>\n    )\n}","import styled from \"styled-components\";\n\nexport const ReviewsWrapper = styled.ul`\n    display: flex;\n    flex-wrap: wrap;\n    justify-content: center;\n    gap: 30px;\n    margin-top: 40px;\n    margin-bottom: 40px;\n`\n\nexport const ReviewCard = styled.li`\n    width: 380px;\n\n     @media screen and (min-width: 768px) {\n        justify-content: space-between;\n        width: 350px;\n     }\n`\n\nexport const InnerWrapper = styled.div`\n    display: flex;\n    align-items: center;\n`\n\nexport const Author = styled.p`\n    margin-left: 10px;\n`\n\nexport const Content = styled.p`\n    margin-top: 10px;\n\n`","const shortReview = (str) => {\n    if (str.length > 270) {\n      let newStr = str.slice(0, 270);\n      return `${newStr}...`;\n    }\n    return str;\n  }\n\nexport default shortReview;","import { useParams } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport { RxAvatar } from 'react-icons/rx';\nimport { fetchMovieReviews } from '../../api/tmbApiService';\nimport { ReviewsWrapper, ReviewCard, InnerWrapper, Author, Content } from './Reviews.styled';\nimport { ReviewsPlug } from '../../components/PlugComponents/Plug';\nimport shortReview from '../../utils/makeItShort';\n\nconst Reviews = ()=> {\n  const { movieId } = useParams();\n  const [ reviews, setReviews] = useState([]);\n\n  useEffect(()=>{\n    const foundMovieReviews = async (movId) => {\n        try {\n          const movieRvs = await fetchMovieReviews(movId);\n          setReviews(movieRvs);\n\n        } catch (error) {\n          console.log(error);\n        }\n    }\n\n    foundMovieReviews(movieId);\n  }, [movieId]);\n\n  \n  return (\n    <ReviewsWrapper>\n    {reviews.length ? reviews.map(({id, author, content})=> {\n          return (\n              <ReviewCard key={id}>\n                  <InnerWrapper>\n                    <RxAvatar size={32} style={{color: '#B1A296'}}/>\n                    <Author>{author}</Author>\n                  </InnerWrapper>\n                 <Content>{shortReview(content)}</Content>\n              </ReviewCard>\n          )\n      }) : <ReviewsPlug/>}\n    </ReviewsWrapper>\n  )\n\n}\n\nexport default Reviews;"],"names":["KEY_API","BASE_URL","fetchTrends","pageNum","fetch","response","json","data","console","log","fetchMovies","movieSearch","isInitialRender","results","length","toast","fetchMovieById","movie","fetchMovieReviews","fetchMovieCast","cast","fetchGenres","genresList","genres","reduce","acc","id","name","localStorage","setItem","JSON","stringify","ReviewsPlug","imgUrl","style","display","src","alt","MovieSearchPlug","height","ReviewsWrapper","styled","ReviewCard","InnerWrapper","Author","Content","str","newStr","slice","movieId","useParams","useState","reviews","setReviews","useEffect","foundMovieReviews","movId","movieRvs","map","author","content","size","color","shortReview"],"sourceRoot":""}