{"version":3,"file":"static/js/415.359f8568.chunk.js","mappings":"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","sources":["api/tmb-api-service.js","components/MovieList/MovieList.jsx","pages/Home.jsx","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"],"sourcesContent":["\nconst KEY_API = '0b11624b950ea9c4284f61844023b09c';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\n\nexport const fetchTrends = async () => {\n  try {\n    const response = await fetch(`${BASE_URL}trending/all/day?api_key=${KEY_API}`);\n    const data = await response.json();\n    return data.results;\n\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport const fetchMovies = async (movieSearch) => {\n\n  try {\n    const response = await fetch(`${BASE_URL}search/movie?api_key=${KEY_API}&query=${movieSearch}&language=en-US&page=1&include_adult=false`)\n    const data = await response.json();\n    return data.results;\n\n  } catch (error) {\n    console.log(error);\n  }\n}\n\n  export const fetchMovieById = async (movie) => {\n\n    try {\n      const response = await fetch(`${BASE_URL}movie/${movie}?api_key=${KEY_API}&language=en-US`)\n      const data = await response.json();\n      return data;\n  \n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  export const fetchMovieReviews = async (movie) => {\n\n    try {\n      const response = await fetch(`${BASE_URL}movie/${movie}/reviews?api_key=${KEY_API}&language=en-US&page=1`)\n      const data = await response.json();\n      return data.results;\n  \n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  export const fetchMovieCast = async (movie) => {\n\n    try {\n      const response = await fetch(`${BASE_URL}movie/${movie}/credits?api_key=${KEY_API}&language=en-US&page=1`)\n      const data = await response.json();\n      return data.cast;\n  \n    } catch (error) {\n      console.log(error);\n    }\n  }\n","import { NavLink } from 'react-router-dom';\n\nconst MovieList = ({movieArr, location})=> {\n    const BASE_URL_IMG = 'https://image.tmdb.org/t/p/w500';\n\n    return(\n        <ul>\n            {movieArr.map(({id, title, vote_average, backdrop_path, genre_ids, release_date})=> {\n                return (\n                    <li key={id}>\n                        <NavLink to={`/movies/${id}`} state={{from: location}} >\n                            <img src={`${BASE_URL_IMG}${backdrop_path}`} alt={title}/>\n                                </NavLink>\n                        <h2>{title}</h2>\n                        <p>{vote_average}</p>\n                        <p>{genre_ids}</p>\n                        <p>{release_date}</p>\n                    </li>\n                )\n            })}\n        </ul>)\n}\n\nexport default MovieList;\n\n","import { useState, useEffect } from 'react';\nimport {fetchTrends} from '../api/tmb-api-service';\nimport MovieList from '../components/MovieList/MovieList';\n\n\nconst Home = ()=> {\nconst [movies, setTrendingMovies] = useState([]);\n\n    useEffect(()=>{\n        const trendingMoviesArr = async () => {\n            try {\n              const movieArr = await fetchTrends();\n              setTrendingMovies(movieArr);\n\n            } catch (error) {\n              console.log(error);\n            }\n        }\n\n        trendingMoviesArr();\n    },[])\n\n    return (\n        <>\n        <h1>Home Page</h1>\n        <MovieList movieArr={movies}/>\n        </>\n    )\n}\n\nexport default Home;","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}"],"names":["KEY_API","BASE_URL","fetchTrends","fetch","response","json","data","results","console","log","fetchMovies","movieSearch","fetchMovieById","movie","fetchMovieReviews","fetchMovieCast","cast","movieArr","location","map","id","title","vote_average","backdrop_path","genre_ids","release_date","to","state","from","src","alt","useState","movies","setTrendingMovies","useEffect","trendingMoviesArr","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","then","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined"],"sourceRoot":""}