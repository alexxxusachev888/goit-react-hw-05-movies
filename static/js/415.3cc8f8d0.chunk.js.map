{"version":3,"file":"static/js/415.3cc8f8d0.chunk.js","mappings":"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","sources":["api/tmbApiService.js","components/MovieList/MovieList.styled.jsx","utils/genresTransform.jsx","components/MovieList/MovieList.jsx","components/Pagination/Pagination.styled.jsx","components/Pagination/Pagination.jsx","pages/Home.jsx"],"sourcesContent":["import { toast } from 'react-toastify';\nconst KEY_API = '0b11624b950ea9c4284f61844023b09c';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\n\nexport const fetchTrends = async (pageNum = 1) => {\n  try {\n    const response = await fetch(`${BASE_URL}trending/all/day?api_key=${KEY_API}&page=${pageNum}`);\n    const data = await response.json();\n    return data;\n\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport const fetchMovies = async (movieSearch, pageNum = 1) => {\n\n  try {\n    const response = await fetch(`${BASE_URL}search/movie?api_key=${KEY_API}&query=${movieSearch}&language=en-US&page=${pageNum}&include_adult=false`)\n    const data = await response.json();\n    \n    if(data.results.length === 0) {\n      toast.warn('Nothing was found on your request')\n    } \n    \n    return data;\n\n  } catch (error) {\n    console.log(error);\n  }\n}\n\n  export const fetchMovieById = async (movie) => {\n\n    try {\n      const response = await fetch(`${BASE_URL}movie/${movie}?api_key=${KEY_API}&language=en-US`)\n      const data = await response.json();\n      return data;\n  \n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  export const fetchMovieReviews = async (movie) => {\n\n    try {\n      const response = await fetch(`${BASE_URL}movie/${movie}/reviews?api_key=${KEY_API}&language=en-US&page=1`)\n      const data = await response.json();\n      return data.results;\n  \n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  export const fetchMovieCast = async (movie) => {\n\n    try {\n      const response = await fetch(`${BASE_URL}movie/${movie}/credits?api_key=${KEY_API}&language=en-US&page=1`)\n      const data = await response.json();\n      return data.cast;\n  \n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  export const fetchGenres = async () => {\n\n    try {\n      const response = await fetch(`${BASE_URL}genre/movie/list?api_key=${KEY_API}&language=en-US`)\n      const data = await response.json();\n\n      const genresList = data.genres.reduce((acc, { id, name }) => {\n        acc[id] = name;\n        return acc;\n        }, {});\n\n        localStorage.setItem('genresList', JSON.stringify(genresList));\n  \n    } catch (error) {\n      console.log(error);\n    }\n  }\n","import styled from \"styled-components\";\n\nexport const MoviesWrapper = styled.ul`\n    margin-top: 40px;\n    margin-bottom 40px;\n    display: grid;\n    grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));\n    grid-auto-rows: minmax(300px, auto);\n    gap: 25px;\n`\nexport const MovieCard = styled.li`\n    position: relative;\n    border: 2px solid ${(prop)=> prop.theme.accent};\n    border-radius: 10px;\n    overflow: hidden;\n    transition: transform 250ms ease-in-out;\n\n    &:hover,\n    &:focus {\n        transform: scale(1.03);\n        box-shadow: -1px 8px 66px 6px rgba(115,149,174,0.76);\n    }\n`\nexport const DescrWrapper = styled.div`\n    padding: 10px;\n`\nexport const Title = styled.h2`\n    font-size: 22px;\n`\nexport const Img = styled.img`\n    object-fit: cover;\n    object-position: left top;\n    width: 100%;\n    height: 400px;\n`\nexport const VoteAverege = styled.p`\n    position: absolute; \n    top:20px;\n    left: 20px;\n    padding: 10px 7px;\n    border-radius: 5px;\n    font-weight: bold;\n    background-color: ${(prop)=> prop.theme.accent}\n`\nexport const InnerWrapper = styled.div`\n    display: flex;\n    margin-top: 8px;\n    gap: 3px;\n`\nexport const Genres = styled.p`\n\n`\nexport const ReleaseDate = styled.p`\n\n`\n","const genresConvertor = (genre_ids) => {\n    const parcedGenres = localStorage.getItem('genresList') ? JSON.parse(localStorage.getItem('genresList')) : {};\n    const result = genre_ids.map(id => parcedGenres[id]).filter(item => item !== undefined);\n\n    if (result.length > 2) {\n      result.splice(3, result.length - 2).push(\"Others\");\n\n    } else if (result.length === 0) {\n      result.push(\"no genres\")\n    }\n\n    return result\n  }\n\nexport default genresConvertor;","import { NavLink } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { getYear } from 'date-fns'\nimport { MoviesWrapper, MovieCard, DescrWrapper, InnerWrapper, Title, Img, VoteAverege, Genres, ReleaseDate} from './MovieList.styled';\nimport genresConvertor from '../../utils/genresTransform';\n\nconst MovieList = ({movieArr = [], location})=> {\n    const BASE_URL_IMG = 'https://image.tmdb.org/t/p/w500';\n\n    if (!Array.isArray(movieArr)) {\n        return <div>Movie array is not defined or not an array</div>;\n    }\n\n    return(\n        <MoviesWrapper>\n            {movieArr.map(({id, original_title, original_name, vote_average, poster_path, genre_ids, release_date, first_air_date})=> {\n                return (\n                    <MovieCard key={id}>\n                        <NavLink to={`/movies/${id}`} state={{from: location}} >\n                            <Img src={`${BASE_URL_IMG}${poster_path}`} alt={original_title}/>\n                            <DescrWrapper>\n                                <Title>{original_title || original_name}</Title>\n                                <VoteAverege>{vote_average.toFixed(1)}</VoteAverege>\n                                <InnerWrapper>\n                                    <Genres>{genresConvertor(genre_ids).join(', ')}</Genres>\n                                    <ReleaseDate>| {getYear(new Date(release_date || first_air_date))}</ReleaseDate>\n                                </InnerWrapper>\n                            </DescrWrapper>\n                        </NavLink>\n                    </MovieCard>\n                )\n            })}\n        </MoviesWrapper>)\n}\n\nexport default MovieList;\n\nMovieList.propTypes = {\n    movieArr: PropTypes.array.isRequired,\n    location: PropTypes.object.isRequired,\n}","import styled from \"styled-components\";\nimport ReactPaginate from 'react-paginate';\n\nexport const PaginationStyled = styled(ReactPaginate)`\n  display: flex;\n  justify-content: center;\n  gap: 15px;\n  margin: 10px 0;\n  margin-bottom: 30px;\n  font-size: 18px;\n  \n  .selected {\n    color: ${(prop) => prop.theme.footer};\n  }\n  a {\n    padding: 10px 0;\n    cursor: pointer;\n    &:hover {\n      color: blue;\n    }\n  }\n\n  .activeLink{\n    color: #FFFFFF;\n  }\n  .prev{\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    width: 35px;\n    height: 35px;\n    border-radius: 5px;\n    background-color: ${(prop)=> prop.theme.header};\n    a:hover,\n    a:focus {\n        color: #FFFFFF;\n    }\n  }\n  .page{\n    min-width: 15px;\n    height: 15px;\n    border-radius: 5px;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    padding: 10px;\n    background-color: ${(prop)=> prop.theme.header};\n    a:hover,\n    a:focus {\n        color: #FFFFFF;\n    }\n    &:hover,\n    &:focus {\n        color: #FFFFFF;\n        background-color: ${(prop)=> prop.theme.footer};\n    }\n    \n  }\n/* .container{\n\n}\n\n.next{\n\n}\n\n.linkclass{\n\n}\n.pagebuilder{\n\n} */\n`;\n\n","import { PaginationStyled } from './Pagination.styled'\n\nconst Pagination= ({ location, itemsPerPage, totalItems, setSearchParams, params })=> {\n  const isValidNumber = val => typeof val === 'number' && !isNaN(val);\n  const pageCount = isValidNumber(totalItems) && isValidNumber(itemsPerPage) ? Math.ceil(totalItems / itemsPerPage) : 0;\n\n    const handlePageClick = event => {\n        const nextPageNumber = event.selected + 1;\n        const nextSearchParams = new URLSearchParams(location.search);\n        nextSearchParams.set('page', nextPageNumber || 1);\n        setSearchParams(nextSearchParams);\n      };\n\n    return (\n        <>\n        <PaginationStyled\n        breakLabel=\"...\"\n        nextLabel=\">\"\n        onPageChange={handlePageClick}\n        pageRangeDisplayed={3}\n        marginPagesDisplayed={1}\n        pageCount={pageCount}\n        previousLabel=\"<\"\n        renderOnZeroPageCount={null}\n        onPageActive={window.scrollTo({\n          top: 0,\n          behavior: \"smooth\"\n      })}\n\n        activeClassName={'active'}\n        activeLinkClassName={'activeLink'}\n        previousClassName={\"prev\"}\n        nextClassName={\"prev\"}\n        pageClassName={\"page\"}\n      />\n        </>\n    )\n\n}\n\nexport default Pagination;","import { useState, useEffect,  } from 'react';\nimport { useLocation, useSearchParams } from 'react-router-dom';\nimport { fetchTrends, fetchGenres } from '../api/tmbApiService';\nimport MovieList from '../components/MovieList/MovieList';\nimport Pagination from '../components/Pagination/Pagination';\n\nconst Home = ()=> {\n  const [searchParams, setSearchParams] = useSearchParams({ page: 1 });\n  const [movies, setTrendingMovies] = useState({ results: [] });\n  const location = useLocation();\n  const pageNum = Number(searchParams.get('page')) || 1;\n  console.log(movies)\n  \n    useEffect(()=>{\n        const trendingMoviesArr = async (page) => {\n            try {\n              const movieArr = await fetchTrends(page);\n              setTrendingMovies(movieArr);\n\n            } catch (error) {\n              console.log(error);\n            }\n        }\n        \n        fetchGenres();\n        trendingMoviesArr(pageNum);\n    },[pageNum])\n\n    return (\n        <>\n        <MovieList movieArr={movies.results} location={location}/>\n        <Pagination \n          itemsPerPage={20}\n          totalItems={movies.total_results}\n          setSearchParams={setSearchParams}\n          params={searchParams}\n          location={location}/>\n        </>\n    )\n}\n\nexport default Home;\n"],"names":["KEY_API","BASE_URL","fetchTrends","pageNum","fetch","response","json","data","console","log","fetchMovies","movieSearch","results","length","toast","fetchMovieById","movie","fetchMovieReviews","fetchMovieCast","cast","fetchGenres","genresList","genres","reduce","acc","id","name","localStorage","setItem","JSON","stringify","MoviesWrapper","styled","MovieCard","prop","theme","accent","DescrWrapper","Title","Img","VoteAverege","InnerWrapper","Genres","ReleaseDate","genre_ids","parcedGenres","getItem","parse","result","map","filter","item","undefined","splice","push","movieArr","location","Array","isArray","original_title","original_name","vote_average","poster_path","release_date","first_air_date","to","state","from","src","alt","toFixed","genresConvertor","join","getYear","Date","PaginationStyled","ReactPaginate","footer","header","itemsPerPage","totalItems","setSearchParams","isValidNumber","params","val","isNaN","pageCount","Math","ceil","breakLabel","nextLabel","onPageChange","event","nextPageNumber","selected","nextSearchParams","URLSearchParams","search","set","pageRangeDisplayed","marginPagesDisplayed","previousLabel","renderOnZeroPageCount","onPageActive","window","scrollTo","top","behavior","activeClassName","activeLinkClassName","previousClassName","nextClassName","pageClassName","useSearchParams","page","searchParams","useState","movies","setTrendingMovies","useLocation","Number","get","useEffect","trendingMoviesArr","total_results"],"sourceRoot":""}