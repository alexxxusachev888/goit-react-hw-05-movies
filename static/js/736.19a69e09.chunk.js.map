{"version":3,"file":"static/js/736.19a69e09.chunk.js","mappings":"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","sources":["api/tmbApiService.js","components/Cast/Cast.styled.jsx","components/Cast/Cast.jsx","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"],"sourcesContent":["\nconst KEY_API = '0b11624b950ea9c4284f61844023b09c';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\n\nexport const fetchTrends = async () => {\n  try {\n    const response = await fetch(`${BASE_URL}trending/all/day?api_key=${KEY_API}`);\n    const data = await response.json();\n    console.log(data.results);\n    return data.results;\n    \n\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport const fetchMovies = async (movieSearch) => {\n\n  try {\n    const response = await fetch(`${BASE_URL}search/movie?api_key=${KEY_API}&query=${movieSearch}&language=en-US&page=1&include_adult=false`)\n    const data = await response.json();\n    return data.results;\n\n  } catch (error) {\n    console.log(error);\n  }\n}\n\n  export const fetchMovieById = async (movie) => {\n\n    try {\n      const response = await fetch(`${BASE_URL}movie/${movie}?api_key=${KEY_API}&language=en-US`)\n      const data = await response.json();\n      return data;\n  \n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  export const fetchMovieReviews = async (movie) => {\n\n    try {\n      const response = await fetch(`${BASE_URL}movie/${movie}/reviews?api_key=${KEY_API}&language=en-US&page=1`)\n      const data = await response.json();\n      return data.results;\n  \n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  export const fetchMovieCast = async (movie) => {\n\n    try {\n      const response = await fetch(`${BASE_URL}movie/${movie}/credits?api_key=${KEY_API}&language=en-US&page=1`)\n      const data = await response.json();\n      return data.cast;\n  \n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  export const fetchGenres = async () => {\n\n    try {\n      const response = await fetch(`${BASE_URL}genre/movie/list?api_key=${KEY_API}&language=en-US`)\n      const data = await response.json();\n\n      const genresList = data.genres.reduce((acc, { id, name }) => {\n        acc[id] = name;\n        return acc;\n        }, {});\n\n        localStorage.setItem('genresList', JSON.stringify(genresList));\n  \n    } catch (error) {\n      console.log(error);\n    }\n  }\n","import styled from \"styled-components\";\n\nexport const CastWrapper = styled.ul`\n    display: flex;\n    flex-wrap: wrap;\n    gap: 10px;  \n    margin-top: 40px;\n`\n\nexport const CastItem = styled.li`\n    width: 230px;\n`\n\nexport const Img = styled.img`\n    border-radius: 5px;\n`\n\nexport const Name = styled.p`\n    margin-top: 10px;\n`\n\nexport const Character = styled.p`\n    margin-top: 5px;\n    margin-bottom: 15px;\n`","import { useParams } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport { fetchMovieCast } from '../../api/tmbApiService';\nimport { CastWrapper, CastItem, Img, Name, Character } from './Cast.styled';\n\nconst Cast = ()=> {\n  const { movieId } = useParams();\n  const [ cast, setCast] = useState([]);\n  const BASE_URL_IMG = 'https://image.tmdb.org/t/p/w500';\n\n  useEffect(()=>{\n    const foundMovieCast = async (movId) => {\n        try {\n          const movieCast = await fetchMovieCast(movId);\n          setCast(movieCast);\n\n        } catch (error) {\n          console.log(error);\n        }\n    }\n\n    foundMovieCast(movieId);\n  }, [movieId]);\n\n  return (\n    <CastWrapper>\n    {cast.map(({id, original_name, character, profile_path})=> {\n        return (\n            <CastItem key={id}>\n                <Img src={profile_path ? `${BASE_URL_IMG}${profile_path}` : 'https://picsum.photos/seed/cats/230/345'} alt=\"name\" />\n                <Name>Name: {original_name}</Name>\n                <Character>Character: {character}</Character>\n            </CastItem>\n        )\n    })}\n    </CastWrapper>\n  )\n\n}\n\nexport default Cast;","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}"],"names":["KEY_API","BASE_URL","fetchTrends","fetch","response","json","data","console","log","results","fetchMovies","movieSearch","fetchMovieById","movie","fetchMovieReviews","fetchMovieCast","cast","fetchGenres","genresList","genres","reduce","acc","id","name","localStorage","setItem","JSON","stringify","CastWrapper","styled","CastItem","Img","Name","Character","movieId","useParams","useState","setCast","useEffect","foundMovieCast","movId","movieCast","map","original_name","character","profile_path","src","alt","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","then","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined"],"sourceRoot":""}