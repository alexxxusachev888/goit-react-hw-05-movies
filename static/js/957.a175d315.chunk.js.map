{"version":3,"file":"static/js/957.a175d315.chunk.js","mappings":"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","sources":["api/tmbApiService.js","utils/genresTransform.jsx","components/MovieList/MovieList.styled.jsx","components/MovieList/MovieList.jsx","components/Pagination/Pagination.styled.jsx","components/Pagination/Pagination.jsx","components/PlugComponents/Plug.jsx","components/SearchField/SearchField.styled.jsx","components/SearchField/SearchField.jsx","pages/Movies.jsx"],"sourcesContent":["import { toast } from 'react-toastify';\nconst KEY_API = '0b11624b950ea9c4284f61844023b09c';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\n\nexport const fetchTrends = async (pageNum = 1) => {\n  try {\n    const response = await fetch(`${BASE_URL}trending/all/day?api_key=${KEY_API}&page=${pageNum}`);\n    const data = await response.json();\n    return data;\n\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport const fetchMovies = async (movieSearch = '', pageNum = 1, isInitialRender = false) => {\n\n  try {\n    const response = await fetch(`${BASE_URL}search/movie?api_key=${KEY_API}&query=${movieSearch}&language=en-US&page=${pageNum}&include_adult=false`)\n    const data = await response.json();\n    \n    if (!isInitialRender && data.results.length === 0) {\n      toast.warn('Nothing was found on your request');\n    }\n    \n    return data;\n\n  } catch (error) {\n    console.log(error);\n  }\n}\n\n  export const fetchMovieById = async (movie) => {\n\n    try {\n      const response = await fetch(`${BASE_URL}movie/${movie}?api_key=${KEY_API}&language=en-US`)\n      const data = await response.json();\n      return data;\n  \n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  export const fetchMovieReviews = async (movie) => {\n\n    try {\n      const response = await fetch(`${BASE_URL}movie/${movie}/reviews?api_key=${KEY_API}&language=en-US&page=1`)\n      const data = await response.json();\n      return data.results;\n  \n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  export const fetchMovieCast = async (movie) => {\n\n    try {\n      const response = await fetch(`${BASE_URL}movie/${movie}/credits?api_key=${KEY_API}&language=en-US&page=1`)\n      const data = await response.json();\n      return data.cast;\n  \n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  export const fetchGenres = async () => {\n\n    try {\n      const response = await fetch(`${BASE_URL}genre/movie/list?api_key=${KEY_API}&language=en-US`)\n      const data = await response.json();\n\n      const genresList = data.genres.reduce((acc, { id, name }) => {\n        acc[id] = name;\n        return acc;\n        }, {});\n\n        localStorage.setItem('genresList', JSON.stringify(genresList));\n  \n    } catch (error) {\n      console.log(error);\n    }\n  }\n","const genresConvertor = (genre_ids) => {\n    const parcedGenres = localStorage.getItem('genresList') ? JSON.parse(localStorage.getItem('genresList')) : {};\n    const result = genre_ids.map(id => parcedGenres[id]).filter(item => item !== undefined);\n\n    if (result.length > 2) {\n      result.splice(3, result.length - 2).push(\"Others\");\n\n    } else if (result.length === 0) {\n      result.push(\"no genres\")\n    }\n\n    return result\n  }\n\nexport default genresConvertor;","import styled from \"styled-components\";\n\nexport const MoviesWrapper = styled.ul`\n    margin-top: 40px;\n    margin-bottom 40px;\n    display: grid;\n    grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));\n    grid-auto-rows: minmax(300px, auto);\n    gap: 25px;\n`\nexport const MovieCard = styled.li`\n    position: relative;\n    border: 2px solid ${(prop)=> prop.theme.accent};\n    border-radius: 10px;\n    overflow: hidden;\n    transition: transform 250ms ease-in-out;\n\n    &:hover,\n    &:focus {\n        transform: scale(1.03);\n        box-shadow: -1px 8px 66px 6px rgba(115,149,174,0.76);\n    }\n`\nexport const DescrWrapper = styled.div`\n    padding: 10px;\n`\nexport const Title = styled.h2`\n    font-size: 22px;\n`\nexport const Img = styled.img`\n    object-fit: cover;\n    object-position: left top;\n    width: 100%;\n    height: 400px;\n`\nexport const VoteAverege = styled.p`\n    position: absolute; \n    top:20px;\n    left: 20px;\n    padding: 10px 7px;\n    border-radius: 5px;\n    font-weight: bold;\n    background-color: ${(prop)=> prop.theme.accent}\n`\nexport const InnerWrapper = styled.div`\n    display: flex;\n    margin-top: 8px;\n    gap: 3px;\n`\nexport const Genres = styled.p`\n\n`\nexport const ReleaseDate = styled.p`\n\n`\n","import PropTypes from 'prop-types';\nimport genresConvertor from '../../utils/genresTransform';\nimport { NavLink } from 'react-router-dom';\nimport { getYear } from 'date-fns';\nimport { \n    MoviesWrapper, \n    MovieCard, \n    DescrWrapper, \n    InnerWrapper, \n    Title, \n    Img, \n    VoteAverege, \n    Genres, \n    ReleaseDate} from './MovieList.styled';\n\n\nconst MovieList = ({movieArr = [], location})=> {\n    const BASE_URL_IMG = 'https://image.tmdb.org/t/p/w500';\n\n    return(\n        <MoviesWrapper>\n            {movieArr.map(({id, original_title, original_name, vote_average, poster_path, genre_ids, release_date, first_air_date})=> {\n                return (\n                    <MovieCard key={id}>\n                        <NavLink to={`movies/${id}`} state={{from: location}} >\n                            <Img src={`${BASE_URL_IMG}${poster_path}`} alt={original_title}/>\n                            <DescrWrapper>\n                                <Title>{original_title || original_name}</Title>\n                                <VoteAverege>{vote_average.toFixed(1)}</VoteAverege>\n                                <InnerWrapper>\n                                    <Genres>{genresConvertor(genre_ids).join(', ')}</Genres>\n                                    <ReleaseDate>| {getYear(new Date(release_date || first_air_date))}</ReleaseDate>\n                                </InnerWrapper>\n                            </DescrWrapper>\n                        </NavLink>\n                    </MovieCard>\n                )\n            })}\n        </MoviesWrapper>)\n}\n\nexport default MovieList;\n\nMovieList.propTypes = {\n    movieArr: PropTypes.array.isRequired,\n    location: PropTypes.object.isRequired,\n}","import styled from \"styled-components\";\nimport ReactPaginate from 'react-paginate';\n\nexport const PaginationStyled = styled(ReactPaginate)`\n  display: flex;\n  justify-content: center;\n  gap: 15px;\n  margin: 10px 0;\n  margin-bottom: 30px;\n  font-size: 18px;\n  \n  .selected {\n    color: ${(prop) => prop.theme.footer};\n  }\n  a {\n    padding: 10px 0;\n    cursor: pointer;\n    &:hover {\n      color: blue;\n    }\n  }\n\n  .activeLink{\n    color: #FFFFFF;\n  }\n  .prev{\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    width: 35px;\n    height: 35px;\n    border-radius: 5px;\n    background-color: ${(prop)=> prop.theme.header};\n    a:hover,\n    a:focus {\n        color: #FFFFFF;\n    }\n  }\n  .page{\n    min-width: 15px;\n    height: 15px;\n    border-radius: 5px;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    padding: 10px;\n    background-color: ${(prop)=> prop.theme.header};\n    a:hover,\n    a:focus {\n        color: #FFFFFF;\n    }\n    &:hover,\n    &:focus {\n        color: #FFFFFF;\n        background-color: ${(prop)=> prop.theme.footer};\n    }\n    \n  }\n/* .container{\n\n}\n\n.next{\n\n}\n\n.linkclass{\n\n}\n.pagebuilder{\n\n} */\n`;\n\n","import { PaginationStyled } from './Pagination.styled'\n\nconst Pagination= ({ location, itemsPerPage, totalItems, setSearchParams, params })=> {\n  const isValidNumber = val => typeof val === 'number' && !isNaN(val);\n  const pageCount = isValidNumber(totalItems) && isValidNumber(itemsPerPage) ? Math.ceil(totalItems / itemsPerPage) : 0;\n\n    const handlePageClick = event => {\n        const nextPageNumber = event.selected + 1;\n        const nextSearchParams = new URLSearchParams(location.search);\n        nextSearchParams.set('page', nextPageNumber || 1);\n        setSearchParams(nextSearchParams);\n      };\n\n    return (\n        <>\n        <PaginationStyled\n        breakLabel=\"...\"\n        nextLabel=\">\"\n        onPageChange={handlePageClick}\n        pageRangeDisplayed={3}\n        marginPagesDisplayed={1}\n        pageCount={pageCount}\n        previousLabel=\"<\"\n        renderOnZeroPageCount={null}\n        onPageActive={window.scrollTo({\n          top: 0,\n          behavior: \"smooth\"\n      })}\n\n        activeClassName={'active'}\n        activeLinkClassName={'activeLink'}\n        previousClassName={\"prev\"}\n        nextClassName={\"prev\"}\n        pageClassName={\"page\"}\n      />\n        </>\n    )\n\n}\n\nexport default Pagination;","\nexport const ReviewsPlug = () => {\n    const imgUrl = 'https://media0.giphy.com/media/QPQ3xlJhqR1BXl89RG/200.webp?cid=ecf05e47oeisg3o2v6zfwr5kukig5sa97vyumtbagi4uuum0&rid=200.webp&ct=g';\n    \n    return (\n        <div style={{display: 'flex'}}>\n            <img src={imgUrl} alt='waiting for reviews'/>\n            <img src={imgUrl} alt='waiting for reviews'/>\n            <img src={imgUrl} alt='waiting for reviews'/>\n            <img src={imgUrl} alt='waiting for reviews'/>\n            <img src={imgUrl} alt='waiting for reviews'/>\n        </div>\n    )\n}\n\nexport const MovieSearchPlug = ()=> {\n    return (\n        <img style={{height: '550px'}}src='https://i.pinimg.com/originals/44/5f/1a/445f1ab89041d998d9fa937ad7f9efa3.gif' alt='waiting cat'/>\n    )\n}","import styled from \"styled-components\";\nimport { BsSearch } from 'react-icons/bs';\n\nexport const Search = styled.form`\n    position: absolute;\n    top: 152px;\n    left: 50%;\n    transform: translateX(-50%);\n    display: flex;\n    justify-content: center;\n    background-color: ${(prop) => prop.theme.header}\n\n    @media screen and (min-width: 320px) {\n        top: 170px;\n    }\n\n    @media screen and (min-width: 768px) {\n        top: 100px;\n    }\n    \n    @media screen and (min-width: 1280px) {\n        top: 90px;\n    }\n`\n\nexport const SearchIcon = styled(BsSearch)`\n    position: absolute;\n    right: 7px;\n    top: 3px;\n\n    @media screen and (min-width: 768px) {\n        right: 7px;\n        top: 4px;\n    }\n    \n    @media screen and (min-width: 1280px) {\n        right: 7px;\n        top: 5px;\n    }\n`\n\nexport const Input = styled.input`\n    \n    width: 250px;\n    padding: 10px;\n    padding-right: 15px;\n    border: 1px solid #ccc;\n    border-radius: 5px;\n    font-size: 16px;\n    margin-right: 1px;\n\n    @media screen and (min-width: 320px) {\n        height: 15px;\n    }\n\n    @media screen and (min-width: 768px) {\n        height: 15px;\n    }\n    \n    @media screen and (min-width: 1280px) {\n        \n    }\n`","import { Search, Input, SearchIcon } from './SearchField.styled';\n\nexport const SearchField = ({value, queryString}) => {\n\n    return (\n        <Search >\n                <Input type='text' value={value ?? ''} onChange={(evt) => queryString(evt.target.value)}/>\n                <SearchIcon size={30}/>\n        </Search>\n    )\n}\nexport default SearchField;","import { useState, useEffect, useRef  } from 'react';\nimport { useSearchParams, useLocation } from \"react-router-dom\";\nimport { fetchMovies } from '../api/tmbApiService';\nimport { debounce } from \"lodash\";\nimport { MovieSearchPlug } from \"../components/PlugComponents/Plug\"\nimport MovieList from '../components/MovieList/MovieList';\nimport SearchField from '../components/SearchField/SearchField';\nimport Pagination from '../components/Pagination/Pagination';\n\nconst Movies = ()=> {\n    const [movies, setMovies] = useState({ results: [] });\n    const [searchParams, setSearchParams] = useSearchParams({\n      query: '',\n      page: 1,\n    });\n    const isFirstRender = useRef(true);\n    const location = useLocation();\n    const query = searchParams.get('query') ?? '';\n    const pageNum = Number(searchParams.get('page')) || 1;\n\n    useEffect(()=>{\n        const foundMoviesOnSearch = async (request) => {\n            try {\n              const movieArr = await fetchMovies(request, pageNum, isFirstRender.current);\n              setMovies(movieArr);\n\n            } catch (error) {\n              console.log(error);\n            }\n        }\n\n        if (!isFirstRender.current) {\n          const debouncedSearch = debounce(foundMoviesOnSearch, 400);\n          debouncedSearch(query);\n          \n          return () => debouncedSearch.cancel();\n        } else {\n          isFirstRender.current = false;\n        }\n    },[query, pageNum])\n\n    const updateQueryString = (query) => {\n        const nextQuery = query !== \"\" ? { query, page: 1 } : {};\n        setSearchParams(nextQuery);\n      };\n\n    return (\n        <>\n        <SearchField value={query} queryString={updateQueryString}/>\n        {movies.results.length ? <>\n          <MovieList movieArr={movies.results} location={location}/>\n          <Pagination \n            itemsPerPage={20}\n            totalItems={movies.total_results}\n            setSearchParams={setSearchParams}\n            params={searchParams}\n            location={location}/>\n          </> : <MovieSearchPlug/>}\n        </>\n    )\n}\n\nexport default Movies;\n"],"names":["KEY_API","BASE_URL","fetchTrends","pageNum","fetch","response","json","data","console","log","fetchMovies","movieSearch","isInitialRender","results","length","toast","fetchMovieById","movie","fetchMovieReviews","fetchMovieCast","cast","fetchGenres","genresList","genres","reduce","acc","id","name","localStorage","setItem","JSON","stringify","genre_ids","parcedGenres","getItem","parse","result","map","filter","item","undefined","splice","push","MoviesWrapper","styled","MovieCard","prop","theme","accent","DescrWrapper","Title","Img","VoteAverege","InnerWrapper","Genres","ReleaseDate","movieArr","location","original_title","original_name","vote_average","poster_path","release_date","first_air_date","to","state","from","src","alt","toFixed","genresConvertor","join","getYear","Date","PaginationStyled","ReactPaginate","footer","header","itemsPerPage","totalItems","setSearchParams","isValidNumber","params","val","isNaN","pageCount","Math","ceil","breakLabel","nextLabel","onPageChange","event","nextPageNumber","selected","nextSearchParams","URLSearchParams","search","set","pageRangeDisplayed","marginPagesDisplayed","previousLabel","renderOnZeroPageCount","onPageActive","window","scrollTo","top","behavior","activeClassName","activeLinkClassName","previousClassName","nextClassName","pageClassName","ReviewsPlug","imgUrl","style","display","MovieSearchPlug","height","Search","SearchIcon","BsSearch","Input","value","queryString","type","onChange","evt","target","size","useState","movies","setMovies","useSearchParams","query","page","searchParams","isFirstRender","useRef","useLocation","get","Number","useEffect","foundMoviesOnSearch","request","current","debouncedSearch","debounce","cancel","MovieList","Pagination","total_results"],"sourceRoot":""}